/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controller.ProductAccesFile;
import com.formdev.flatlaf.util.StringUtils;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Orders;
import model.Product;
import model.UserSession;


/**
 *
 * @author Yonathan FC
 */
public class Products extends javax.swing.JPanel {
    private DashboardInterface dashboardInterface;
    DefaultTableModel model;
    private ArrayList<Product> array;
    private TableRowSorter<DefaultTableModel> rowSorter;
    ProductAccesFile file;
    
    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        
        model = new DefaultTableModel();    
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Categoria");
        model.addColumn("Marca");
        model.addColumn("Precio");
        model.addColumn("Fecha de actualización");
        model.addColumn("Fecha de creación");
        
        tblProductBox.setModel(model);
        rowSorter = new TableRowSorter<>(model);
        tblProductBox.setRowSorter(rowSorter);
        file = new ProductAccesFile();

        loadProductsInTable();
    }
    private void loadProductsInTable(){
        try {
            file.openFile("product.dat");
            array = file.getProductList();

            model.setRowCount(0);
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

            for (Product product : array) {
                Object[] row = {
                    product.getId(),
                    product.getName(),
                    product.getCategory(),
                    product.getMark(),
                    product.getPrice(),
                    product.getUpdatedAt().format(formatter),
                    product.getCreatedAt().format(formatter),
                };
                model.addRow(row);
            }

        file.closeFile();
        }catch (IOException e) {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductBox = new javax.swing.JTable();
        btnPurchase = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        tblProductBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Categoria", "Marca", "Precio", "Fecha de actualización", "Fecha de creación"
            }
        ));
        jScrollPane1.setViewportView(tblProductBox);

        btnPurchase.setText("Realizar una compra");
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Productos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addGap(219, 219, 219))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1)
                .addGap(27, 27, 27))
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        if(StringUtils.isEmpty(UserSession.getUsername()))  JOptionPane.showMessageDialog(null,"Para realizar una compra inicia sesión");
        else realizarUnaCompra();
    }//GEN-LAST:event_btnPurchaseActionPerformed

    private void realizarUnaCompra(){
        int fila = tblProductBox.getSelectedRow();
        
        Orders product = new Orders();
        
        if (fila >= 0){
            try {
                product.setNameProduct(tblProductBox.getValueAt(fila, 2).toString());
                product.setPrice(tblProductBox.getValueAt(fila, 5).toString());
                product.setClient(UserSession.getUsername());
                product.setCreatedAt(LocalDate.now());

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error: Uno o más campos no son números enteros válidos.", "Error de conversión", JOptionPane.ERROR_MESSAGE);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Error: El formato de fecha no es válido.", "Error de formato de fecha", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPurchase;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProductBox;
    // End of variables declaration//GEN-END:variables
}
